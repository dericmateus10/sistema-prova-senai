generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Tipo {
  BASICA
  TECNICA
}

model Course {
  id   Int    @id @default(autoincrement())
  name String

  ucs Uc[]

  @@map("courses")
}

model Module {
  id   Int    @id @default(autoincrement())
  name String

  ucs Uc[]

  @@map("modules")
}

model Uc {
  id          Int    @id @default(autoincrement())
  description String
  courseId    Int
  moduleId    Int

  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  module Module @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  capabilitySaepLinks CapabilitySaepUc[] @relation("UcToSaep")
  caps                Capability[]       @relation("UcToCapability")

  @@index([courseId])
  @@index([moduleId])
  @@map("ucs")
}

model BloomTaxonomy {
  id       Int     @id @default(autoincrement())
  name     String
  examples String?

  saepCaps CapabilitiesSaep[] @relation("BloomToSaep")
  caps     Capability[]       @relation("BloomToCapability")

  @@map("bloom_taxonomies")
}

model CapabilitiesSaep {
  id              Int    @id @default(autoincrement())
  description     String
  bloomTaxonomyId Int
  // ucLink via junction
  tipo            Tipo

  bloomTaxonomy    BloomTaxonomy               @relation("BloomToSaep", fields: [bloomTaxonomyId], references: [id], onDelete: Cascade)
  caps             Capability[]                @relation("SaepToCapabilities")
  subFunctionsLink CapabilitySaepSubFunction[] @relation("SaepToSubFunc")
  ucLinks          CapabilitySaepUc[]          @relation("UcToSaep")

  @@index([bloomTaxonomyId])
  @@map("capabilities_saep")
}

model Functions {
  id          Int    @id @default(autoincrement())
  description String

  subFuncs SubFunction[]               @relation("FuncToSubFunc")
  saepLink CapabilitySaepSubFunction[] @relation("SaepToSubFunc")

  @@map("functions")
}

model SubFunction {
  id          Int    @id @default(autoincrement())
  description String
  functionId  Int

  function  Functions                                  @relation("FuncToSubFunc", fields: [functionId], references: [id], onDelete: Cascade)
  standards PerformanceStandard[]                      @relation("SubFuncToPerf")
  saepLink  CapabilitySaepSubFunction[]                @relation("SaepToSubFunc")
  perfLink  CapabilitySubFunctionPerformanceStandard[] @relation("CapToPerf")

  @@index([functionId])
  @@map("sub_functions")
}

model PerformanceStandard {
  id            Int    @id @default(autoincrement())
  description   String
  subFunctionId Int

  subFunction SubFunction                                @relation("SubFuncToPerf", fields: [subFunctionId], references: [id], onDelete: Cascade)
  capPerfLink CapabilitySubFunctionPerformanceStandard[] @relation("CapToPerf")

  @@index([subFunctionId])
  @@map("performance_standards")
}

model Knowledge {
  id          Int     @id @default(autoincrement())
  description String
  examples    String?

  capLinks CapabilityKnowledge[] @relation("CapaToKnowledge")

  @@map("knowledge")
}

model Capability {
  id               Int    @id @default(autoincrement())
  description      String
  bloomTaxonomyId  Int
  ucId             Int
  capabilitySaepId Int?
  tipo             Tipo

  bloomTaxonomy  BloomTaxonomy                              @relation("BloomToCapability", fields: [bloomTaxonomyId], references: [id], onDelete: Cascade)
  uc             Uc                                         @relation("UcToCapability", fields: [ucId], references: [id], onDelete: Cascade)
  saep           CapabilitiesSaep?                          @relation("SaepToCapabilities", fields: [capabilitySaepId], references: [id], onDelete: Cascade)
  knowledgeLinks CapabilityKnowledge[]                      @relation("CapaToKnowledge")
  perfLink       CapabilitySubFunctionPerformanceStandard[] @relation("CapToPerf")

  @@index([bloomTaxonomyId])
  @@index([ucId])
  @@index([capabilitySaepId])
  @@map("capabilities")
}

model CapabilityKnowledge {
  capabilityId Int
  knowledgeId  Int

  capability Capability @relation("CapaToKnowledge", fields: [capabilityId], references: [id], onDelete: Cascade)
  knowledge  Knowledge  @relation("CapaToKnowledge", fields: [knowledgeId], references: [id], onDelete: Cascade)

  @@id([capabilityId, knowledgeId])
  @@index([knowledgeId])
  @@map("capability_knowledge")
}

/// Junction: CapabilitiesSaep <-> Uc
model CapabilitySaepUc {
  capabilitySaepId Int
  ucId             Int

  capabilitySaep CapabilitiesSaep @relation("UcToSaep", fields: [capabilitySaepId], references: [id], onDelete: Cascade)
  uc             Uc               @relation("UcToSaep", fields: [ucId], references: [id], onDelete: Cascade)

  @@id([capabilitySaepId, ucId])
  @@index([ucId])
  @@map("capability_saep_uc")
}

/// Junction: CapabilitiesSaep <-> Functions <-> SubFunction
model CapabilitySaepSubFunction {
  capabilitySaepId Int
  functionId       Int
  subFunctionId    Int

  capabilitySaep CapabilitiesSaep @relation("SaepToSubFunc", fields: [capabilitySaepId], references: [id], onDelete: Cascade)
  function       Functions        @relation("SaepToSubFunc", fields: [functionId], references: [id], onDelete: Cascade)
  subFunction    SubFunction      @relation("SaepToSubFunc", fields: [subFunctionId], references: [id], onDelete: Cascade)

  @@id([capabilitySaepId, functionId, subFunctionId])
  @@index([functionId, subFunctionId])
  @@map("capability_saep_functions_sub_functions")
}

/// Junction: Capability <-> PerformanceStandard <-> SubFunction
model CapabilitySubFunctionPerformanceStandard {
  capabilityId          Int
  performanceStandardId Int
  subFunctionId         Int

  capability  Capability          @relation("CapToPerf", fields: [capabilityId], references: [id], onDelete: Cascade)
  performance PerformanceStandard @relation("CapToPerf", fields: [performanceStandardId], references: [id], onDelete: Cascade)
  subFunction SubFunction         @relation("CapToPerf", fields: [subFunctionId], references: [id], onDelete: Cascade)

  @@id([capabilityId, performanceStandardId, subFunctionId])
  @@index([performanceStandardId, subFunctionId])
  @@map("capabilities_sub_functions_performance_standard")
}
